package post

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/codedellemc/gorackhd/models"
)

// PostNodesIdentifierObmIdentifyReader is a Reader for the PostNodesIdentifierObmIdentify structure.
type PostNodesIdentifierObmIdentifyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *PostNodesIdentifierObmIdentifyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostNodesIdentifierObmIdentifyCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewPostNodesIdentifierObmIdentifyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostNodesIdentifierObmIdentifyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewPostNodesIdentifierObmIdentifyCreated creates a PostNodesIdentifierObmIdentifyCreated with default headers values
func NewPostNodesIdentifierObmIdentifyCreated() *PostNodesIdentifierObmIdentifyCreated {
	return &PostNodesIdentifierObmIdentifyCreated{}
}

/*PostNodesIdentifierObmIdentifyCreated handles this case with default header values.

obm settings accepted
*/
type PostNodesIdentifierObmIdentifyCreated struct {
}

func (o *PostNodesIdentifierObmIdentifyCreated) Error() string {
	return fmt.Sprintf("[POST /nodes/{identifier}/obm/identify][%d] postNodesIdentifierObmIdentifyCreated ", 201)
}

func (o *PostNodesIdentifierObmIdentifyCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostNodesIdentifierObmIdentifyNotFound creates a PostNodesIdentifierObmIdentifyNotFound with default headers values
func NewPostNodesIdentifierObmIdentifyNotFound() *PostNodesIdentifierObmIdentifyNotFound {
	return &PostNodesIdentifierObmIdentifyNotFound{}
}

/*PostNodesIdentifierObmIdentifyNotFound handles this case with default header values.

The node with the identifier was not found or has no obm settings.

*/
type PostNodesIdentifierObmIdentifyNotFound struct {
	Payload *models.Error
}

func (o *PostNodesIdentifierObmIdentifyNotFound) Error() string {
	return fmt.Sprintf("[POST /nodes/{identifier}/obm/identify][%d] postNodesIdentifierObmIdentifyNotFound  %+v", 404, o.Payload)
}

func (o *PostNodesIdentifierObmIdentifyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostNodesIdentifierObmIdentifyDefault creates a PostNodesIdentifierObmIdentifyDefault with default headers values
func NewPostNodesIdentifierObmIdentifyDefault(code int) *PostNodesIdentifierObmIdentifyDefault {
	return &PostNodesIdentifierObmIdentifyDefault{
		_statusCode: code,
	}
}

/*PostNodesIdentifierObmIdentifyDefault handles this case with default header values.

Unexpected error
*/
type PostNodesIdentifierObmIdentifyDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post nodes identifier obm identify default response
func (o *PostNodesIdentifierObmIdentifyDefault) Code() int {
	return o._statusCode
}

func (o *PostNodesIdentifierObmIdentifyDefault) Error() string {
	return fmt.Sprintf("[POST /nodes/{identifier}/obm/identify][%d] PostNodesIdentifierObmIdentify default  %+v", o._statusCode, o.Payload)
}

func (o *PostNodesIdentifierObmIdentifyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
