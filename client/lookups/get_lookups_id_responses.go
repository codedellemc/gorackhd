package lookups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/emccode/gorackhd/models"
)

// GetLookupsIDReader is a Reader for the GetLookupsID structure.
type GetLookupsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetLookupsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetLookupsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetLookupsIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetLookupsIDOK creates a GetLookupsIDOK with default headers values
func NewGetLookupsIDOK() *GetLookupsIDOK {
	return &GetLookupsIDOK{}
}

/*GetLookupsIDOK handles this case with default header values.

array of all
*/
type GetLookupsIDOK struct {
	Payload []interface{}
}

func (o *GetLookupsIDOK) Error() string {
	return fmt.Sprintf("[GET /lookups/{id}][%d] getLookupsIdOK  %+v", 200, o.Payload)
}

func (o *GetLookupsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLookupsIDDefault creates a GetLookupsIDDefault with default headers values
func NewGetLookupsIDDefault(code int) *GetLookupsIDDefault {
	return &GetLookupsIDDefault{
		_statusCode: code,
	}
}

/*GetLookupsIDDefault handles this case with default header values.

Unexpected error
*/
type GetLookupsIDDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get lookups ID default response
func (o *GetLookupsIDDefault) Code() int {
	return o._statusCode
}

func (o *GetLookupsIDDefault) Error() string {
	return fmt.Sprintf("[GET /lookups/{id}][%d] GetLookupsID default  %+v", o._statusCode, o.Payload)
}

func (o *GetLookupsIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
