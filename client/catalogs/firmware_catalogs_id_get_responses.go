// Code generated by go-swagger; DO NOT EDIT.

package catalogs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// FirmwareCatalogsIDGetReader is a Reader for the FirmwareCatalogsIDGet structure.
type FirmwareCatalogsIDGetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FirmwareCatalogsIDGetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewFirmwareCatalogsIDGetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewFirmwareCatalogsIDGetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewFirmwareCatalogsIDGetOK creates a FirmwareCatalogsIDGetOK with default headers values
func NewFirmwareCatalogsIDGetOK() *FirmwareCatalogsIDGetOK {
	return &FirmwareCatalogsIDGetOK{}
}

/*FirmwareCatalogsIDGetOK handles this case with default header values.

Successfully retrieved the catalog
*/
type FirmwareCatalogsIDGetOK struct {
	Payload FirmwareCatalogsIDGetOKBody
}

func (o *FirmwareCatalogsIDGetOK) Error() string {
	return fmt.Sprintf("[GET /catalogs/{identifier}/firmware][%d] firmwareCatalogsIdGetOK  %+v", 200, o.Payload)
}

func (o *FirmwareCatalogsIDGetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFirmwareCatalogsIDGetDefault creates a FirmwareCatalogsIDGetDefault with default headers values
func NewFirmwareCatalogsIDGetDefault(code int) *FirmwareCatalogsIDGetDefault {
	return &FirmwareCatalogsIDGetDefault{
		_statusCode: code,
	}
}

/*FirmwareCatalogsIDGetDefault handles this case with default header values.

Error
*/
type FirmwareCatalogsIDGetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the firmware catalogs Id get default response
func (o *FirmwareCatalogsIDGetDefault) Code() int {
	return o._statusCode
}

func (o *FirmwareCatalogsIDGetDefault) Error() string {
	return fmt.Sprintf("[GET /catalogs/{identifier}/firmware][%d] firmwareCatalogsIdGet default  %+v", o._statusCode, o.Payload)
}

func (o *FirmwareCatalogsIDGetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*FirmwareCatalogsIDGetOKBody firmware catalogs ID get o k body
swagger:model FirmwareCatalogsIDGetOKBody
*/

type FirmwareCatalogsIDGetOKBody interface{}
