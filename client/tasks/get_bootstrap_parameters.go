package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetBootstrapParams creates a new GetBootstrapParams object
// with the default values initialized.
func NewGetBootstrapParams() *GetBootstrapParams {
	var ()
	return &GetBootstrapParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetBootstrapParamsWithTimeout creates a new GetBootstrapParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetBootstrapParamsWithTimeout(timeout time.Duration) *GetBootstrapParams {
	var ()
	return &GetBootstrapParams{

		timeout: timeout,
	}
}

/*GetBootstrapParams contains all the parameters to send to the API endpoint
for the get bootstrap operation typically these are written to a http.Request
*/
type GetBootstrapParams struct {

	/*MacAddress
	  Query string containing the mac address

	*/
	MacAddress *string

	timeout time.Duration
}

// WithMacAddress adds the macAddress to the get bootstrap params
func (o *GetBootstrapParams) WithMacAddress(macAddress *string) *GetBootstrapParams {
	o.MacAddress = macAddress
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetBootstrapParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.MacAddress != nil {

		// query param macAddress
		var qrMacAddress string
		if o.MacAddress != nil {
			qrMacAddress = *o.MacAddress
		}
		qMacAddress := qrMacAddress
		if qMacAddress != "" {
			if err := r.SetQueryParam("macAddress", qMacAddress); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
