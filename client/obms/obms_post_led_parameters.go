package obms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// NewObmsPostLedParams creates a new ObmsPostLedParams object
// with the default values initialized.
func NewObmsPostLedParams() *ObmsPostLedParams {
	var ()
	return &ObmsPostLedParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewObmsPostLedParamsWithTimeout creates a new ObmsPostLedParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewObmsPostLedParamsWithTimeout(timeout time.Duration) *ObmsPostLedParams {
	var ()
	return &ObmsPostLedParams{

		timeout: timeout,
	}
}

/*ObmsPostLedParams contains all the parameters to send to the API endpoint
for the obms post led operation typically these are written to a http.Request
*/
type ObmsPostLedParams struct {

	/*Body
	  If the body contains the property value: true, the LED will be lit. If the value property does not exist, the LED will be turned off. The body must contain the property nodeId set to the correct node identifier.


	*/
	Body *models.ObmLed

	timeout time.Duration
}

// WithBody adds the body to the obms post led params
func (o *ObmsPostLedParams) WithBody(body *models.ObmLed) *ObmsPostLedParams {
	o.Body = body
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *ObmsPostLedParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.Body == nil {
		o.Body = new(models.ObmLed)
	}

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
