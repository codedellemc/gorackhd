package get

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/emccode/gorackhd/models"
)

// GetCatalogsIdentifierReader is a Reader for the GetCatalogsIdentifier structure.
type GetCatalogsIdentifierReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetCatalogsIdentifierReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetCatalogsIdentifierOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetCatalogsIdentifierDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetCatalogsIdentifierOK creates a GetCatalogsIdentifierOK with default headers values
func NewGetCatalogsIdentifierOK() *GetCatalogsIdentifierOK {
	return &GetCatalogsIdentifierOK{}
}

/*GetCatalogsIdentifierOK handles this case with default header values.

A single catalog
*/
type GetCatalogsIdentifierOK struct {
	Payload *models.Catalog
}

func (o *GetCatalogsIdentifierOK) Error() string {
	return fmt.Sprintf("[GET /catalogs/{identifier}][%d] getCatalogsIdentifierOK  %+v", 200, o.Payload)
}

func (o *GetCatalogsIdentifierOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Catalog)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCatalogsIdentifierDefault creates a GetCatalogsIdentifierDefault with default headers values
func NewGetCatalogsIdentifierDefault(code int) *GetCatalogsIdentifierDefault {
	return &GetCatalogsIdentifierDefault{
		_statusCode: code,
	}
}

/*GetCatalogsIdentifierDefault handles this case with default header values.

NotFound error
*/
type GetCatalogsIdentifierDefault struct {
	_statusCode int
}

// Code gets the status code for the get catalogs identifier default response
func (o *GetCatalogsIdentifierDefault) Code() int {
	return o._statusCode
}

func (o *GetCatalogsIdentifierDefault) Error() string {
	return fmt.Sprintf("[GET /catalogs/{identifier}][%d] GetCatalogsIdentifier default ", o._statusCode)
}

func (o *GetCatalogsIdentifierDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
