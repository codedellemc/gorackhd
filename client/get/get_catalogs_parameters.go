package get

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetCatalogsParams creates a new GetCatalogsParams object
// with the default values initialized.
func NewGetCatalogsParams() *GetCatalogsParams {
	var ()
	return &GetCatalogsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCatalogsParamsWithTimeout creates a new GetCatalogsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCatalogsParamsWithTimeout(timeout time.Duration) *GetCatalogsParams {
	var ()
	return &GetCatalogsParams{

		timeout: timeout,
	}
}

/*GetCatalogsParams contains all the parameters to send to the API endpoint
for the get catalogs operation typically these are written to a http.Request
*/
type GetCatalogsParams struct {

	/*Query
	  query object to pass through to waterline.

	*/
	Query *string

	timeout time.Duration
}

// WithQuery adds the query to the get catalogs params
func (o *GetCatalogsParams) WithQuery(query *string) *GetCatalogsParams {
	o.Query = query
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetCatalogsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.Query != nil {

		// query param query
		var qrQuery string
		if o.Query != nil {
			qrQuery = *o.Query
		}
		qQuery := qrQuery
		if qQuery != "" {
			if err := r.SetQueryParam("query", qQuery); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
