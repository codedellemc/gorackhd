package get

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/codedellemc/gorackhd/models"
)

// GetDhcpReader is a Reader for the GetDhcp structure.
type GetDhcpReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetDhcpReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDhcpOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetDhcpDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetDhcpOK creates a GetDhcpOK with default headers values
func NewGetDhcpOK() *GetDhcpOK {
	return &GetDhcpOK{}
}

/*GetDhcpOK handles this case with default header values.

A list of all DHCP leases registered with this instance of the service.

*/
type GetDhcpOK struct {
	Payload []*models.Lease
}

func (o *GetDhcpOK) Error() string {
	return fmt.Sprintf("[GET /dhcp][%d] getDhcpOK  %+v", 200, o.Payload)
}

func (o *GetDhcpOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDhcpDefault creates a GetDhcpDefault with default headers values
func NewGetDhcpDefault(code int) *GetDhcpDefault {
	return &GetDhcpDefault{
		_statusCode: code,
	}
}

/*GetDhcpDefault handles this case with default header values.

NotFound error
*/
type GetDhcpDefault struct {
	_statusCode int
}

// Code gets the status code for the get dhcp default response
func (o *GetDhcpDefault) Code() int {
	return o._statusCode
}

func (o *GetDhcpDefault) Error() string {
	return fmt.Sprintf("[GET /dhcp][%d] GetDhcp default ", o._statusCode)
}

func (o *GetDhcpDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
