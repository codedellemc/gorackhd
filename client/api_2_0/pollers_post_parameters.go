package api_2_0

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/spiegela/gorackhd/models"
)

// NewPollersPostParams creates a new PollersPostParams object
// with the default values initialized.
func NewPollersPostParams() *PollersPostParams {
	var ()
	return &PollersPostParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPollersPostParamsWithTimeout creates a new PollersPostParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPollersPostParamsWithTimeout(timeout time.Duration) *PollersPostParams {
	var ()
	return &PollersPostParams{

		timeout: timeout,
	}
}

/*PollersPostParams contains all the parameters to send to the API endpoint
for the pollers post operation typically these are written to a http.Request
*/
type PollersPostParams struct {

	/*Content
	  The request body must contain the necessary information to create the poller, including type, pollInterval, and command. The node identifier must also be included if the poller is to be associated with a node.


	*/
	Content *models.Poller20PartialPoller

	timeout time.Duration
}

// WithContent adds the content to the pollers post params
func (o *PollersPostParams) WithContent(content *models.Poller20PartialPoller) *PollersPostParams {
	o.Content = content
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *PollersPostParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.Content == nil {
		o.Content = new(models.Poller20PartialPoller)
	}

	if err := r.SetBodyParam(o.Content); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
