package skus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewSkusIDPutPackParams creates a new SkusIDPutPackParams object
// with the default values initialized.
func NewSkusIDPutPackParams() *SkusIDPutPackParams {
	var ()
	return &SkusIDPutPackParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSkusIDPutPackParamsWithTimeout creates a new SkusIDPutPackParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSkusIDPutPackParamsWithTimeout(timeout time.Duration) *SkusIDPutPackParams {
	var ()
	return &SkusIDPutPackParams{

		timeout: timeout,
	}
}

/*SkusIDPutPackParams contains all the parameters to send to the API endpoint
for the skus Id put pack operation typically these are written to a http.Request
*/
type SkusIDPutPackParams struct {

	/*Identifier
	  The identifier of the SKU Pack

	*/
	Identifier string

	timeout time.Duration
}

// WithIdentifier adds the identifier to the skus Id put pack params
func (o *SkusIDPutPackParams) WithIdentifier(identifier string) *SkusIDPutPackParams {
	o.Identifier = identifier
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *SkusIDPutPackParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	// path param identifier
	if err := r.SetPathParam("identifier", o.Identifier); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
