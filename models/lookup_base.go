// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LookupBase A lookup record
// swagger:model LookupBase

type LookupBase struct {

	// ip address
	IPAddress strfmt.IPv4 `json:"ipAddress,omitempty"`

	// mac address
	// Pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$
	MacAddress string `json:"macAddress,omitempty"`

	// node
	Node string `json:"node,omitempty"`
}

/* polymorph LookupBase ipAddress false */

/* polymorph LookupBase macAddress false */

/* polymorph LookupBase node false */

// Validate validates this lookup base
func (m *LookupBase) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMacAddress(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LookupBase) validateMacAddress(formats strfmt.Registry) error {

	if swag.IsZero(m.MacAddress) { // not required
		return nil
	}

	if err := validate.Pattern("macAddress", "body", string(m.MacAddress), `^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LookupBase) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LookupBase) UnmarshalBinary(b []byte) error {
	var res LookupBase
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
